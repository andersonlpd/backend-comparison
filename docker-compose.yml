version: '3.8'

services:
  python-backend:
    build:
      context: ./python-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/inventory
      - SECRET_KEY=your_secret_key_here
      - ENVIRONMENT=development
    depends_on:
      - db
    restart: always

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=inventory
    ports:
      - "5432:5432"

  prometheus:
    image: prom/prometheus:v2.35.0
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always

  grafana:
    image: grafana/grafana:8.5.0
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PROVISIONING_PATH=/etc/grafana/provisioning
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: always
    
  node-backend:
    build:
      context: ./node-backend
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/inventory
      - SECRET_KEY=your_secret_key_here
      - NODE_ENV=development
    depends_on:
      - db
    restart: always

  influxdb:
    image: influxdb:1.8-alpine
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=jmeter
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
      - INFLUXDB_USER=jmeter
      - INFLUXDB_USER_PASSWORD=jmeter
    volumes:
      - influxdb_data:/var/lib/influxdb
    restart: always

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  influxdb_data:
